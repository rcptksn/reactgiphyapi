{"version":3,"sources":["Components/SearchList.js","Components/SearchForm.js","App.js","serviceWorker.js","index.js"],"names":["SearchList","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchData","react_default","a","createElement","className","pageTitle","map","item","index","key","src","images","fixed_height","url","title","type","href","bitly_url","target","Component","SearchForm","_this","state","isSearch","apiTrendURL","apiURL","apiKey","lang","limit","rating","query","createAPIURL","setJsonData","searchForm","bind","assertThisInitialized","queryChange","limitChange","ratingChange","langChange","event","setState","value","_this$state","_this2","_this$state2","fetch","then","res","json","data","id","placeholder","onChange","onClick","Components_SearchList","myApiURL","App","Components_SearchForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61c1f470.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass SearchList extends Component {\n\n    constructor(props){\n        super(props);\n    };\n    render() {\n        const {searchData} = this.props;\n        return (\n            <div className=\"searchList row\">\n            <div className=\"col-12\">\n                <h2>{this.props.pageTitle}</h2>\n                <hr />\n            </div>\n            {\n                searchData.map((item, index) => {\n                   return (\n                        <div className=\"col-md-4\" key={index}>\n                            <div className=\"card mb-4 shadow-sm\">\n                                <img src={item.images.fixed_height.url} />\n                                <div className=\"card-body\">\n                                    <p className=\"card-text\">\n                                        {item.title}<br />\n                                        <span className=\"type\">{item.type}</span><a href={item.bitly_url} target=\"_blank\" className=\"float-right btnView\">Giphy'de Gör</a>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                   )\n                })\n            }\n            </div>\n        )\n    }\n}\n\nexport default SearchList;","import React, { Component } from 'react'\nimport SearchList from './SearchList'\n\nclass SearchForm extends Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            isSearch: false,\n            apiTrendURL: \"https://api.giphy.com/v1/gifs/trending?api_key=wuG901dsm94iHrP02PJ1NVDZvzoNXdfB&limit=25&rating=G\",\n            apiURL: \"https://api.giphy.com/v1/gifs/search?\",\n            apiKey: \"api_key=wuG901dsm94iHrP02PJ1NVDZvzoNXdfB\",\n            lang: \"tr\",\n            limit: \"25\",\n            rating: \"G\",\n            query: \"\",\n            createAPIURL: \"\",\n            setJsonData: [],\n            pageTitle: \"Trend Gifler\"\n        };\n\n        this.searchForm= this.searchForm.bind(this);\n        this.queryChange = this.queryChange.bind(this);\n        this.limitChange = this.limitChange.bind(this);\n        this.ratingChange = this.ratingChange.bind(this);\n        this.langChange = this.langChange.bind(this);\n    }\n\n    queryChange(event){\n        this.setState({\n            query: event.target.value\n        });\n    }\n\n    limitChange(event){\n        this.setState({\n            limit: event.target.value\n        });\n    }\n\n    ratingChange(event){\n        this.setState({\n            rating: event.target.value\n        });\n    }\n\n    langChange(event){\n        this.setState({\n            lang: event.target.value\n        });\n    }\n\n    searchForm(event){\n        const {query, apiURL, apiKey, limit, lang, rating} = this.state;\n        if(query != \"\")\n        {\n            this.setState({\n                createAPIURL: apiURL + apiKey + \"&q=\" + query + \"&limit=\" + limit + \"&rating=\" + rating + \"&lang=\" + lang,\n                isSearch: true,\n                pageTitle: this.state.query + \" için arama sonuçları\"\n            });\n        }\n    }\n\n    render() {\n        const {createAPIURL, isSearch, setJsonData, apiTrendURL, pageTitle} = this.state;\n        fetch(!isSearch ? apiTrendURL : createAPIURL)\n        .then((res) => { return res.json()})\n        .then((res) => {\n            this.setState({\n                setJsonData: res.data\n            });\n        });\n        return (\n            <div className=\"pageApp\">\n                <div className=\"card pageSearchForm\">\n                    <div className=\"col-12\">\n                        <div className=\"mb-3\">\n                            <input type=\"text\" className=\"form-control\" id=\"firstName\" placeholder=\"Birşeyler yazın...\" value={this.state.query} onChange={this.queryChange} />\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-5 mb-3\">\n                                <label>Dil Seçin</label>\n                                <select className=\"custom-select d-block w-100\" id=\"country\" value={this.state.lang} onChange={this.langChange}>\n                                    <option value=\"TR\">TR</option>\n                                    <option value=\"EN\">EN</option>\n                                </select>\n                            </div>\n                            <div className=\"col-md-4 mb-3\">\n                                <label>Derece</label>\n                                <select className=\"custom-select d-block w-100\" id=\"state\" value={this.state.rating} onChange={this.ratingChange}>\n                                    <option value=\"G\">G</option>\n                                    <option value=\"Y\">Y</option>\n                                    <option value=\"PG\">PG</option>\n                                    <option value=\"PG-13\">PG-13</option>\n                                    <option value=\"R\">R</option>\n                                </select>\n                            </div>\n                            <div className=\"col-md-3 mb-3\">\n                                <label>Limit</label>\n                                <input type=\"text\" className=\"form-control\" id=\"zip\" placeholder=\"25\" value={this.state.limit} onChange={this.limitChange} />\n                            </div>\n                        </div>\n                        <div className=\"mb-3\">\n                                <button  className=\"btn btn-primary btn-lg btn-block\" type=\"button\" onClick={this.searchForm}> Gif Ara </button>\n                        </div>\n                        \n                    </div>\n                </div>\n                <SearchList myApiURL={createAPIURL} isSearch={isSearch} searchData={setJsonData} pageTitle= {pageTitle} />\n            </div>\n        )\n    }\n}\n\nexport default SearchForm;","import React from 'react';\nimport './App.css';\n\nimport SearchForm from './Components/SearchForm.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}